#name: stopfloods

services:
  app:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
      args:
        APP_ENV: ${APP_ENV}
#    user: "${UID}:${GID}"
    env_file:
      - ./.env
    depends_on:
      - mysql
    volumes:
      - ./src:/var/www/html:cached
    expose:
      - "9000"

  nginx:
    image: nginx:alpine
    env_file:
      - ./.env
    volumes:
      - ./src:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/certbot/etc:/etc/letsencrypt:ro
      - ./docker/certbot/lib:/var/lib/letsencrypt:rw
      - ./docker/certbot/www:/var/www/certbot:ro
    depends_on:
      - app
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"

  mysql:
    image: mysql:${MYSQL_VERSION}
    env_file:
      - ./.env
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - dbdata:/var/lib/mysql

  certbot:
    image: certbot/certbot
    env_file:
      - ./.env
    volumes:
      - ./docker/certbot/etc:/etc/letsencrypt
      - ./docker/certbot/lib:/var/lib/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew; done"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    depends_on:
      - mysql
    env_file:
      - ./.env
    environment:
      PMA_HOST: mysql
      PMA_PORT: ${DB_PORT}
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "${PHPMYADMIN_PORT}:80"
    restart: always

  node:
    image: node:20-alpine
    working_dir: /var/www/html          
    volumes:
      - ./src:/var/www/html:delegated   
      - node_modules:/var/www/html/node_modules
    ports:
      - "5173:5173"
    environment:
      CHOKIDAR_USEPOLLING: "true"
      VITE_HOST: "0.0.0.0"
    # command: sh -lc "npm install && npm run dev -- --host"  # optional


 

volumes:
  dbdata:
  node_modules:
